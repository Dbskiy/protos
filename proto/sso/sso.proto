syntax = "proto3";

package auth;

option go_package = "dbskiy.sso.v1;ssov1";

service Auth {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
}

service Permissions {
  rpc UserPermissions(UserPermissionsRequest) returns (UserPermissionsResponse);
}

service UserInfo {
  rpc GetUserRole (GetUserRoleRequest) returns (GetUserRoleResponse);
  rpc SetUserRole(SetUserRoleRequest) returns (SetUserRoleResponse);
  //TODO: GetUserInfo
  //TODO: GetUsersInfo
  //TODO: DeleteUser
  //TODO: получение информации о пользователях, пользователе для будущей панели админа, удаление пользователя
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  int64 user_id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  int32 app_id = 3;
}

message LoginResponse {
  string token = 1;
}

message UserPermissionsRequest {
  int64 user_id = 1;
}
message UserPermissionsResponse {
  repeated string permissions = 1;
}

message GetUserRoleRequest {
  int64 user_id = 1;
}

message GetUserRoleResponse {
  string role = 1;
}

message SetUserRoleRequest {
  //добавить при необходимости id пользователя, который пытается поменять роль
  int64 user_id = 1; // id пользователя, роль которого меняют
  int32 role_id = 2;
}

message SetUserRoleResponse {
  string status = 1;
}